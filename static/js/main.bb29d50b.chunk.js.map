{"version":3,"sources":["assets/profile.jpg","assets/publications.tsv","Header.js","pages/Home/index.js","pages/Research/index.js","pages/Projects/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","route","useLocation","Navbar","collapseOnSelect","expand","className","fixed","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","Item","pathname","Home","src","profileImg","alt","href","size","target","rel","Research","useState","papers","setPapers","useEffect","fetch","publications","then","response","body","getReader","read","result","csv","TextDecoder","decode","value","Papa","parse","delimiter","header","complete","data","filter","item","sort","a","b","year","map","paper","key","authors","style","fontWeight","title","fontStyle","vehicle","link_publication","link_preprint","String","includes","process","link_presentation","link_source_code","Projects","Routes","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,oKCI5B,SAASC,IACpB,IAAMC,EAAQC,cAEd,OACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,UAAU,SAASC,MAAM,OAC1D,yBAAKD,UAAU,aACX,kBAACH,EAAA,EAAOK,MAAR,CAAcF,UAAU,QAAQG,GAAIC,IAAMC,GAAG,KAA7C,mBAGA,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,SAC7B,kBAACV,EAAA,EAAOW,SAAR,CACIC,GAAG,OACHT,UAAU,uBACV,kBAACU,EAAA,EAAD,CAAKV,UAAU,cACX,kBAACU,EAAA,EAAIC,KAAL,CACIX,UAA8B,MAAnBL,EAAMiB,SAAmB,SAAW,MAC/C,kBAACF,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,KAAvB,SAMJ,kBAACK,EAAA,EAAIC,KAAL,CACIX,UAA8B,cAAnBL,EAAMiB,SAA2B,SAAW,MACvD,kBAACF,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,aAAvB,iB,qCCrBb,SAASQ,IACpB,OACI,6BACI,kBAACnB,EAAD,MACA,yBAAKM,UAAU,4BACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,cAAcc,IAAKC,IAAYC,IAAI,MAEzD,uBAAGhB,UAAU,gBAAb,4EACgF,uBAAGiB,KAAK,kBAAR,wCADhF,0FACqO,uBAAGA,KAAK,8BAAR,oCADrO,KACgT,uBAAGA,KAAK,kBAAR,wBADhT,yIACue,uBAAGA,KAAK,sBAAR,4BADve,sCAEG,uBAAGjB,UAAU,gBAAb,qOACA,6BAAK,6BACL,yBAAKA,UAAU,cACX,uBAAGA,UAAU,cACViB,KAAK,sCACJ,kBAAC,IAAD,CAASC,KAAM,MAEnB,uBAAGlB,UAAU,cACViB,KAAK,uCACLE,OAAO,SACPC,IAAI,uBACH,kBAAC,IAAD,CAAYF,KAAM,MAEtB,uBAAGlB,UAAU,cACViB,KAAK,+BACLE,OAAO,SACPC,IAAI,uBACH,kBAAC,IAAD,CAAUF,KAAM,MAEpB,uBAAGlB,UAAU,cACViB,KAAK,yDACLE,OAAO,SACPC,IAAI,uBACH,kBAAC,IAAD,CAAUF,KAAM,MAEpB,uBAAGlB,UAAU,cACViB,KAAK,uDACLE,OAAO,SACPC,IAAI,uBACH,kBAAC,IAAD,CAAgBF,KAAM,MAE1B,uBAAGlB,UAAU,cACViB,KAAK,wCACLE,OAAO,SACPC,IAAI,uBACH,kBAAC,IAAD,CAASF,KAAM,S,8CC9CxB,SAASG,IAAY,IAAD,EACHC,mBAAS,IADN,mBACxBC,EADwB,KAChBC,EADgB,KAuB/B,OApBAC,qBAAU,WACNC,MAAMC,KAAcC,MAAK,SAAAC,GACrBA,EAASC,KAAKC,YAAYC,OAAOJ,MAAK,SAAAK,GAClC,IACIC,EADY,IAAIC,YAAY,SACdC,OAAOH,EAAOI,OAChCC,IAAKC,MAAML,EAAK,CACZM,UAAW,KACXC,QAAQ,EACRC,SAAU,SAACT,GACPT,EAAUS,EAAOU,KACZC,QAAO,SAAAC,GAAI,MAAgB,KAAZA,EAAKpC,MACpBqC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAOD,EAAEC,MAAQ,EAAI,eAM3DzB,EAAU,MACX,IAGC,6BACI,kBAAC9B,EAAD,MACA,yBAAKM,UAAU,4BACX,wBAAIA,UAAU,UACTuB,EAAO2B,KAAI,SAAAC,GAAK,OACT,wBAAIC,IAAKD,EAAM1C,GACXT,UAAU,eACV,8BAAOmD,EAAME,QAAb,KAA6B,6BAC7B,0BAAMC,MAAO,CAACC,WAAY,SAAUJ,EAAMK,MAA1C,KAAwD,6BACxD,0BAAMF,MAAO,CAACG,UAAW,WAAYN,EAAMO,QAA3C,KAAsDP,EAAMF,KAA5D,MAA0E,6BAC9C,KAA3BE,EAAMQ,iBACH,mCAAQ,uBAAG1C,KAAMkC,EAAMQ,iBACZxC,OAAO,SACPC,IAAI,uBAFP,eAAR,MAGE,GAEmB,KAAxB+B,EAAMS,cACH,mCAAQ,uBAAG3C,KACP4C,OAAOV,EAAMS,eAAeE,SAAS,QACrCX,EAAMS,cACJG,YAAyBZ,EAAMS,cAC1BzC,OAAO,SACPC,IAAI,uBALP,YAAR,MAME,GAEuB,KAA5B+B,EAAMa,kBACH,mCAAQ,uBAAG/C,KACP4C,OAAOV,EAAMa,mBAAmBF,SAAS,QACzCX,EAAMa,kBACJD,YAAyBZ,EAAMa,kBAC1B7C,OAAO,SACPC,IAAI,uBALP,gBAAR,MAME,GAEsB,KAA3B+B,EAAMc,iBACH,mCAAQ,uBAAGhD,KAAMkC,EAAMc,iBACZ9C,OAAO,SACPC,IAAI,uBAFP,eAAR,MAGE,UCjEvB,SAAS8C,IACpB,OACI,6BACI,kBAACxE,EAAD,MACA,yBAAKM,UAAU,4BAAf,mBCDG,SAASmE,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWzD,IACjC,kBAAC,IAAD,CAAOuD,KAAK,YAAYE,UAAWjD,IACnC,kBAAC,IAAD,CAAO+C,KAAK,YAAYE,UAAWJ,M,YCNpC,SAASK,IACpB,OACI,kBAACJ,EAAD,MCIYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxD,MAAK,SAAAyD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bb29d50b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.d6c7705a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/publications.c7b28949.tsv\";","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport default function Header() {\n    const route = useLocation();\n\n    return (\n        <Navbar collapseOnSelect expand=\"md\" className=\"header\" fixed=\"top\">\n            <div className=\"container\">\n                <Navbar.Brand className=\"brand\" as={Link} to=\"/\">\n                    LUCAS MAY PETRY\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"menu\" />\n                <Navbar.Collapse\n                    id=\"menu\"\n                    className=\"justify-content-end\">\n                    <Nav className=\"menu-popup\">\n                        <Nav.Item\n                            className={route.pathname === '/' ? 'active' : null}>\n                            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                        </Nav.Item>\n                        {/* <Nav.Item\n                            className={route.pathname === '/projects' ? 'active' : null}>\n                            <Nav.Link as={Link} to=\"/projects\">Projects</Nav.Link>\n                        </Nav.Item> */}\n                        <Nav.Item\n                            className={route.pathname === '/research' ? 'active' : null}>\n                            <Nav.Link as={Link} to=\"/research\">Research</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                </Navbar.Collapse>\n            </div>\n        </Navbar>\n    );\n}","import React from 'react';\nimport Header from '../../Header';\nimport { FaGithub, FaLinkedin, FaOrcid, FaResearchgate } from 'react-icons/fa';\nimport { MdSchool, MdEmail } from 'react-icons/md';\n\nimport profileImg from '../../assets/profile.jpg';\n\nexport default function Home() {\n    return (\n        <div>\n            <Header />\n            <div className=\"main-container container\">\n                <div className=\"text-center\">\n                    <img className=\"profile-img\" src={profileImg} alt=\"\" />\n                </div>\n\t            <p className=\"text-justify\">\n                    I earned my B.S. (2018) and M.S. (2020) degrees in Computer Science from <a href=\"http://ufsc.br\">Federal University of Santa Catarina</a> (UFSC) in Florian√≥polis, Brazil. I was a visiting graduate research student at the <a href=\"https://bigdata.cs.dal.ca/\">Institute for Big Data Analytics</a>, <a href=\"http://dal.ca/\">Dalhousie University</a> in Halifax, Canada (Jan. 2019 to Jan. 2020), funded by the Emerging Leaders in the Americas Program (ELAP). I also studied abroad at <a href=\"http://ucdavis.edu\">University of California</a> in Davis, USA, from 2015 to 2016.</p>\n                <p className=\"text-justify\">My career and research interests span from classical machine learning techniques to deep learning, especially in Natural Language Processing (NLP) and Geographical Information Science (GIS). I love collaboration and learning!</p>\n                <br/><br/>\n                <div className=\"text-right\">\n                    <a className=\"social-link\"\n                       href=\"mailto:lucas.petry@posgrad.ufsc.br\">\n                        <MdEmail size={50} />\n                    </a>\n                    <a className=\"social-link\"\n                       href=\"http://linkedin.com/in/lucasmaypetry\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        <FaLinkedin size={50} />\n                    </a>\n                    <a className=\"social-link\"\n                       href=\"http://github.com/lucaspetry\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        <FaGithub size={50} />\n                    </a>\n                    <a className=\"social-link\"\n                       href=\"https://scholar.google.com/citations?user=nKGT_csAAAAJ\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        <MdSchool size={50} />\n                    </a>\n                    <a className=\"social-link\" \n                       href=\"https://www.researchgate.net/profile/Lucas_May_Petry\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        <FaResearchgate size={50} />\n                    </a>\n                    <a className=\"social-link\"\n                       href=\"https://orcid.org/0000-0003-1462-4538\"\n                       target=\"_blank\"\n                       rel=\"noopener noreferrer\">\n                        <FaOrcid size={50} />\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport Header from '../../Header';\n\nimport publications from '../../assets/publications.tsv';\n\nexport default function Research() {\n    const [papers, setPapers] = useState([]);\n\n    useEffect(() => {\n        fetch(publications).then(response => {\n            response.body.getReader().read().then(result => {\n                const decoder = new TextDecoder('utf-8');\n                let csv = decoder.decode(result.value);\n                Papa.parse(csv, {\n                    delimiter: '\\t',\n                    header: true,\n                    complete: (result) => {\n                        setPapers(result.data\n                            .filter(item => item.id !== '')\n                            .sort((a, b) => a.year > b.year ? -1 : 1));\n                    }\n                })\n            })\n        })\n\n        setPapers([]);\n    }, []);\n\n    return (\n        <div>\n            <Header />\n            <div className=\"main-container container\">\n                <ul className=\"papers\">\n                    {papers.map(paper => (\n                            <li key={paper.id}\n                                className=\"papers-item\">\n                                <span>{paper.authors}.</span><br/>\n                                <span style={{fontWeight: \"bold\"}}>{paper.title}.</span><br/>\n                                <span style={{fontStyle: \"italic\"}}>{paper.vehicle} ({paper.year}).</span><br/>\n                                {paper.link_publication !== '' ?\n                                    <span>[ <a href={paper.link_publication}\n                                               target=\"_blank\"\n                                               rel=\"noopener noreferrer\">publication</a> ]</span>\n                                    : ''\n                                }\n                                {paper.link_preprint !== '' ?\n                                    <span>[ <a href={\n                                        String(paper.link_preprint).includes('http') ?\n                                        paper.link_preprint\n                                        : process.env.PUBLIC_URL + paper.link_preprint}\n                                               target=\"_blank\"\n                                               rel=\"noopener noreferrer\">preprint</a> ]</span>\n                                    : ''\n                                }\n                                {paper.link_presentation !== '' ?\n                                    <span>[ <a href={\n                                        String(paper.link_presentation).includes('http') ?\n                                        paper.link_presentation\n                                        : process.env.PUBLIC_URL + paper.link_presentation}\n                                               target=\"_blank\"\n                                               rel=\"noopener noreferrer\">presentation</a> ]</span>\n                                    : ''\n                                }\n                                {paper.link_source_code !== '' ?\n                                    <span>[ <a href={paper.link_source_code}\n                                               target=\"_blank\"\n                                               rel=\"noopener noreferrer\">source code</a> ]</span>\n                                    : ''\n                                }\n                            </li>\n                        )\n                    )}\n                </ul>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Header from '../../Header';\n\nexport default function Projects() {\n    return (\n        <div>\n            <Header />\n            <div className=\"main-container container\">\n                Coming soon...\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Research from './pages/Research';\nimport Projects from './pages/Projects';\n\nexport default function Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/research\" component={Research} />\n                <Route path=\"/projects\" component={Projects} />\n            </Switch>\n        </BrowserRouter>\n    );\n}","import React from 'react';\nimport Routes from './Routes';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nexport default function App() {\n    return (\n        <Routes />\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}